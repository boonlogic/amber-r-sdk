image: 715859896688.dkr.ecr.us-east-1.amazonaws.com/pipeline-x86-ubuntu:latest

before_script:
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - ssh-keyscan gitlab.boonlogic.com >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts
  - export PATH=~/.local/bin:$PATH

variables:
  GIT_STRATEGY: none
  GIT_SSL_NO_VERIFY: "true"
  CLANG_FORMAT: clang-format
  REF_NAME: master
  SHELL: /bin/bash

stages:
  - build
  - self-test
  - test-setup
  - test
  
build:
  stage: build
  tags:
    - expert-docker
  script:
  - chmod -Rf 755 ci-root && rm -rf ci-root || true
  - git clone git@gitlab.boonlogic.com:development/builder.git ci-root
  - cd ci-root
  - git checkout ${CI_COMMIT_REF_NAME} || true
  - BRANCH=${CI_COMMIT_REF_NAME} make amber-r-sdk-env
  - make amber-r-sdk-build
  artifacts:
    paths:
    - ci-root/

code-check:
  stage: self-test
  tags:
    - expert-docker
  script:
    - cd ci-root
    - make amber-r-sdk-code-check

test-setup:
  stage: test-setup
  tags:
    - expert-docker
  script:
    - cd ci-root
    - BRANCH=${CI_COMMIT_REF_NAME} make amber-cli-env
    - make amber-cli-build
    - BRANCH=${CI_COMMIT_REF_NAME} make expert-api-env
    - make expert-api-build
  artifacts:
    paths:
      - ci-root/packages/amber-cli
      - ci-root/packages/expert-server

test-aol:
  stage: test
  tags:
    - expert-docker
  before_script:
    - export PATH=~/.local/bin:$PATH
    - cd ci-root/packages/amber-cli/amber-cli
    - export API_ID="qa-${CI_JOB_ID}"
    - ./amber aws create-test-config --api ${API_ID} > ${CI_PROJECT_DIR}/ci-root/packages/amber-r-sdk/amber-r-sdk/Amber.license
    - ./amber aws create-deployment --function dev:${API_ID} --release rel-0.0.598
    - echo -n "*** sleep for 30 seconds to allow api gateway to be fully up... " && sleep 30 && echo "(done)"
    - cd ${CI_PROJECT_DIR}/ci-root/packages/expert-server/expert-api
    - make deploy-amber-lambda-${API_ID}
    - echo -n "*** sleep for 5 seconds to allow lambda to be fully up... " && sleep 5 && echo "(done)"
  script:
    - cd ${CI_PROJECT_DIR}/ci-root/packages/amber-r-sdk/amber-r-sdk
    - export AMBER_TEST_LICENSE_FILE=${PWD}/Amber.license
    - export AMBER_TEST_LICENSE_ID=aol
    - make test-local
  after_script:
    - export API_ID="qa-${CI_JOB_ID}"
    - cd ci-root/packages/amber-cli/amber-cli
    - ./amber aws delete-deployment --function dev:${API_ID}
  artifacts:
    paths:
      - ci-root/packages/amber-r-sdk/amber-r-sdk

test-aoc:
  stage: test
  tags:
    - expert-docker
  before_script:
    - cd ci-root/packages/amber-cli/amber-cli
    - ./amber aop create-test-config --port 9876 > ${CI_PROJECT_DIR}/ci-root/packages/amber-r-sdk/amber-r-sdk/Amber.license
    - cd ${CI_PROJECT_DIR}/ci-root/packages/expert-server/expert-api
    - export PORT=9876
    - make start-amber-cloud
  script:
    - cd ${CI_PROJECT_DIR}/ci-root/packages/amber-r-sdk/amber-r-sdk
    - export AMBER_TEST_LICENSE_FILE=${PWD}/Amber.license
    - export AMBER_TEST_LICENSE_ID=aoc
    - make test-local
